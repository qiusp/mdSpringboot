server:
  port: 8080


# 其中 [host] 是 MySQL 服务器的地址，[port] 是 MySQL 服务器的端口，[database] 是数据库名称，[username] 是登录数据库的用户名，[password] 是登录数据库的密码。
#  [driver-class-nam] 驱动,[type]连接池druid
# 配置 swagger2 knife4j
spring:
  mvc:
    pathmatch:
      # 配置策略
      matching-strategy: ant-path-matcher
  datasource:
    username: root
    password: root
    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #druid 数据源专有配置
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



# mybatis-plus的配置
mybatis-plus:
  mapper-locations: classpath:*/mapper/*.xml  #指定sql映射文件
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  #开启sql打印日志
    map-underscore-to-camel-case: true #将带有下划线的表字段映射为驼峰格式的实体类属性
  global-config:
    db-config:
      id-type: assign_id
      #全局配置逻辑删除字段名
      logic-delete-field: isDeleted
      #逻辑已删除值（默认1）
      logic-delete-value: 1
      #逻辑未删除值（默认0）
      logic-not-delete-value: 0
      #字段验证策略之 insert,在 insert 的时候的字段验证策略:不为空（可在注解@TableField局部修改）
      insert-strategy: not_null
      #字段验证策略之 update,在 update 的时候的字段验证策略
      update-strategy: not_null
      #驼峰下划线转换
      table-underline: true
    banner: true #是否控制台 print mybatis-plus 的 LOGO

